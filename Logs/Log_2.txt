<bound method Module.state_dict of NormalizedCrossEntropyLoss_REVISED(
  (reduction): SimpleCNN(
    (conv_layers): Sequential(
      (0): Conv2d(3, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU()
      (3): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (4): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): ReLU()
      (6): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
      (7): Conv2d(32, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (8): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (9): ReLU()
      (10): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (11): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (12): ReLU()
      (13): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
      (14): Conv2d(64, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (15): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (16): ReLU()
      (17): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (18): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (19): ReLU()
      (20): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    )
    (fc_layers): Sequential(
      (0): Flatten(start_dim=1, end_dim=-1)
      (1): Linear(in_features=2048, out_features=256, bias=True)
      (2): ReLU()
      (3): Dropout(p=0.5, inplace=False)
      (4): Linear(in_features=256, out_features=10, bias=True)
    )
  )
  (cross_entropy): CrossEntropyLoss()
)>

<bound method Optimizer.state_dict of SGD (
Parameter Group 0
    dampening: 0
    differentiable: False
    foreach: None
    fused: None
    initial_lr: 0.01
    lr: 0.0042250000000000005
    maximize: False
    momentum: 0.9
    nesterov: False
    weight_decay: 0.0005
)>

{'step_size': 15, 'gamma': 0.65, 'base_lrs': [0.01], 'last_epoch': 30, 'verbose': False, '_step_count': 31, '_get_lr_called_within_step': False, '_last_lr': [0.0042250000000000005]}


Key Info: Loss: NormalizedCrossEntropy_REVISED | Optimizer(Adam): LR_0.1 MOMENTUM_0.9 W_DECAY_5e-4 | Scheduler: STEP_15 GAMMA_0.65

Epoch 1 | Loss: 0.9896 | Accuracy: 0.1755
Epoch 2 | Loss: 0.9869 | Accuracy: 0.1869
Epoch 3 | Loss: 0.9845 | Accuracy: 0.1955
Epoch 4 | Loss: 0.9824 | Accuracy: 0.2036
Epoch 5 | Loss: 0.9798 | Accuracy: 0.2108
Epoch 6 | Loss: 0.9778 | Accuracy: 0.2166
Epoch 7 | Loss: 0.9744 | Accuracy: 0.2260
Epoch 8 | Loss: 0.9714 | Accuracy: 0.2328
Epoch 9 | Loss: 0.9682 | Accuracy: 0.2390
Epoch 10 | Loss: 0.9648 | Accuracy: 0.2446
Epoch 11 | Loss: 0.9608 | Accuracy: 0.2520
Epoch 12 | Loss: 0.9558 | Accuracy: 0.2620
Epoch 13 | Loss: 0.9514 | Accuracy: 0.2704
Epoch 14 | Loss: 0.9463 | Accuracy: 0.2775
Epoch 15 | Loss: 0.9400 | Accuracy: 0.2868
Epoch 16 | Loss: 0.9211 | Accuracy: 0.3173
Epoch 17 | Loss: 0.9102 | Accuracy: 0.3367
Epoch 18 | Loss: 0.9020 | Accuracy: 0.3449
Epoch 19 | Loss: 0.8933 | Accuracy: 0.3609
Epoch 20 | Loss: 0.8869 | Accuracy: 0.3679
Epoch 21 | Loss: 0.8805 | Accuracy: 0.3801
Epoch 22 | Loss: 0.8853 | Accuracy: 0.3732
Epoch 23 | Loss: 0.8772 | Accuracy: 0.3864
Epoch 24 | Loss: 0.8668 | Accuracy: 0.3987
Epoch 25 | Loss: 0.8476 | Accuracy: 0.4239
Epoch 26 | Loss: 0.8417 | Accuracy: 0.4324
Epoch 27 | Loss: 0.8476 | Accuracy: 0.4246
Epoch 28 | Loss: 0.8365 | Accuracy: 0.4430
Epoch 29 | Loss: 0.8531 | Accuracy: 0.4174
Epoch 30 | Loss: 0.8315 | Accuracy: 0.4482
